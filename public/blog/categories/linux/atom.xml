<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Linux | Gadget Habit]]></title>
  <link href="http://michaelevans.org/blog/categories/linux/atom.xml" rel="self"/>
  <link href="http://michaelevans.org/"/>
  <updated>2015-09-09T16:37:28-04:00</updated>
  <id>http://michaelevans.org/</id>
  <author>
    <name><![CDATA[Michael Evans]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Getting Mavericks' Compressed Memory Feature in Ubuntu]]></title>
    <link href="http://michaelevans.org/blog/2013/06/12/getting-mavericks-compressed-memory-feature-in-ubuntu/"/>
    <updated>2013-06-12T00:16:00-04:00</updated>
    <id>http://michaelevans.org/blog/2013/06/12/getting-mavericks-compressed-memory-feature-in-ubuntu</id>
    <content type="html"><![CDATA[<p>On Monday, Apple announced a new update for it&rsquo;s desktop operating system, which will be named OS X Mavericks. As part of the annoucement, they touched on a few performance related features, including a new power saving API, which was called App Nap, as well as a memory compression feature, which would allow compress the memory of programs that are not currently active.</p>

<p>According to <a href="http://arstechnica.com/apple/2013/06/how-os-x-mavericks-works-its-power-saving-magic/">Ars Technica</a>, Apple is using a technique called Timer Coalescing to create App Nap. Apps that are not active will have their processes set to a lower priority, and therefore use less CPU/disk/etc, and thereby save power. This feature has been around on Linux for a long time, and apparently has been part of Windows as well.</p>

<p>I had not heard, however, of this compressed memory technique, although apparently it had been done many years ago by a program called &ldquo;RamDoubler&rdquo;. After some quick Googling, it seems that this is available via a kernel module called &ldquo;zram&rdquo;.</p>

<!-- more -->


<p>Wanna try it out? If you&rsquo;re running Precise or newer (12.04 or later), you&rsquo;re in luck. Just apt-get zram with</p>

<p><code>
sudo apt-get install zram-config
</code></p>

<p>and you&rsquo;re all set.</p>

<p>To see the effects of zram, just run <code>free -m</code> and you&rsquo;ll notice an increase in memory/swap space. I haven&rsquo;t thoroughly tested to see the performance gains, but it&rsquo;s interesting to see that some of the new OS X features are already available elsewhere.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Running Crouton on a Chromebook Pixel]]></title>
    <link href="http://michaelevans.org/blog/2013/06/11/running-crouton-on-a-chromebook-pixel/"/>
    <updated>2013-06-11T21:22:00-04:00</updated>
    <id>http://michaelevans.org/blog/2013/06/11/running-crouton-on-a-chromebook-pixel</id>
    <content type="html"><![CDATA[<p>So a few weeks back at Google IO, Google handed out an awesome laptop to attendees, the <a href="https://play.google.com/store/devices/details?id=chromebook_pixel_wifi">Chromebook Pixel</a>. For those who aren&rsquo;t familiar with it, the Pixel is a laptop running Google&rsquo;s ChromeOS, with the highest resolution screen available on a laptop (2560x1700). Unfortunately for me (and owners of the other Chromebooks), there&rsquo;s a few things you can&rsquo;t do in Chrome, like writing software in the new Android Studio!</p>

<p>In order to work around this limitation in ChromeOS, a developer at Google named David Schneider developed a set of scripts called <a href="https://github.com/dnschneid/crouton">crouton</a>. Crouton allows you to run Ubuntu inside a your ChromeOS system, so that you can easily swap back and forth between the operating systems. This is not limited to the Pixel, so if you&rsquo;re using another model Chromebook, even dating back to the CR-48, this guide should work for you.</p>

<!-- more -->


<h3>Installing Crouton</h3>

<h4>Step One: Enable Developer Mode (This might vary slightly depending on your model)</h4>

<p><em>Warning: Switching into or out of developer mode will wipe all the user data on the ChromeOS machine.</em></p>

<ol>
<li>Shutdown your machine.</li>
<li>Press and hold esc + refresh, and push the power button to turn on your computer.</li>
<li>Push Ctrl+D to be prompted to enable developer mode.</li>
<li>Hit enter, and watch the progress bar at the top of the screen as the system is wiped.</li>
<li>When the machine boots up again, either wait til it boots, or you can hit Ctrl+D again to start faster.</li>
</ol>


<h4>Step Two: Install Crouton</h4>

<ol>
<li>Download crouton <a href="http://goo.gl/fd3zc">here</a>.</li>
<li>Open a shell (Ctrl+Alt+T, type shell and hit enter) and run <code>sudo sh -e ~/Downloads/crouton -t xfce,touch</code>.</li>
<li>Go get a drink, come back and answer some questions.</li>
<li>Done! Start up an XFCE session with <code>sudo startxfce4</code>.</li>
</ol>


<h4>Step Three: Enjoy Ubuntu on your Chromebook!</h4>

<p>To switch back and forth between ChromeOS and Crouton, swap with Ctrl+Alt+Back and the sequence Ctrl+Alt+Forward followed by Ctrl+Alt+Refresh.</p>

<p>Pro tip: Increase the font size under the display settings, so that the text is a little more readable!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[VMware 'Easy Install' stuck on Ubuntu 12.04]]></title>
    <link href="http://michaelevans.org/blog/2012/12/20/vmware-easy-install-stuck-on-ubuntu-12-dot-04/"/>
    <updated>2012-12-20T19:34:00-05:00</updated>
    <id>http://michaelevans.org/blog/2012/12/20/vmware-easy-install-stuck-on-ubuntu-12-dot-04</id>
    <content type="html"><![CDATA[<p>I was trying to install Ubuntu 12.04 in VMware Player on my PC and ran into some trouble during the &ldquo;Easy Install&rdquo; process. The installation basically hung at the console after the installation was successful, with a message telling me that the VMware Tools were being installed, and that I could login and use the system while they were installing. Maybe 10 minutes later, there was no progress, so I restarted the VM.</p>

<p>I decided to log in and start X manually, so I could at least mess around with it in the meanwhile. Without being able to resize the window/use the shared clipboard, I decided to try to install the tools manually. No dice here, since VMware won&rsquo;t let you install the tools while the Easy Install process is still running. Here&rsquo;s what you can do to fix it:</p>

<!--more-->


<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo mv /etc/issue.backup /etc/issue
</span><span class='line'>sudo mv /etc/rc.local.backup /etc/rc.local
</span><span class='line'>sudo mv /opt/vmware-tools-installer/lightdm.conf /etc/init
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Then follow these few steps to stop the easy install process:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Power off the virtual machine.
</span><span class='line'>Go to VM > Settings
</span><span class='line'>Select Floppy.
</span><span class='line'>Select &lsquo;Use physical drive&rsquo;, and set the dropdown to &lsquo;Auto Detect&rsquo;.
</span><span class='line'>Power on the virtual machine and install VMware Tools.</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Hope this helps!</p>
]]></content>
  </entry>
  
</feed>
